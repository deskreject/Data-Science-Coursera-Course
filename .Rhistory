<<<<<<< HEAD
}
complete(directory = "specdata", id = 1:3)
complete <- function(directory, id) {
list <- lapply(seq_along(id), function(i){
if(id[i] < 10){
df <- read.csv(here::here("Data", "R Programming",directory, paste(0,0,id[i],".csv", sep = "")))
}else if(id[i] < 99){
df <- read.csv(here::here("Data", "R Programming",directory, paste(0,id[i],".csv", sep = "")))
} else{
df <- read.csv(here::here("Data", "R Programming",directory, paste(id[i],".csv", sep = "")))
}
nobs <- sum(is.na(df[,2] & df[,3]) == F )
return(cbind(id[i],nobs))
})
return(matrix(unlist(list), ncol = 2, byrow = T))
}
complete(directory = "specdata", id = 1:3)
complete <- function(directory, id) {
list <- lapply(seq_along(id), function(i){
if(id[i] < 10){
df <- read.csv(here::here("Data", "R Programming",directory, paste(0,0,id[i],".csv", sep = "")))
}else if(id[i] < 99){
df <- read.csv(here::here("Data", "R Programming",directory, paste(0,id[i],".csv", sep = "")))
} else{
df <- read.csv(here::here("Data", "R Programming",directory, paste(id[i],".csv", sep = "")))
}
nobs <- sum(is.na(df[,2] & df[,3]) == F )
return(cbind(id[i],nobs))
})
return(as.data.frame(matrix(unlist(list), ncol = 2, byrow = T)))
}
complete(directory = "specdata", id = 1:3)
complete <- function(directory, id) {
list <- lapply(seq_along(id), function(i){
if(id[i] < 10){
df <- read.csv(here::here("Data", "R Programming",directory, paste(0,0,id[i],".csv", sep = "")))
}else if(id[i] < 99){
df <- read.csv(here::here("Data", "R Programming",directory, paste(0,id[i],".csv", sep = "")))
} else{
df <- read.csv(here::here("Data", "R Programming",directory, paste(id[i],".csv", sep = "")))
}
nobs <- sum(is.na(df[,2] & df[,3]) == F )
return(cbind(id[i],nobs))
})
df_complete <- as.data.frame(matrix(unlist(list), ncol = 2, byrow = T))
names(df_complete) = c("id", "nobs")
}
complete(directory = "specdata", id = 1:3)
complete <- function(directory, id) {
list <- lapply(seq_along(id), function(i){
if(id[i] < 10){
df <- read.csv(here::here("Data", "R Programming",directory, paste(0,0,id[i],".csv", sep = "")))
}else if(id[i] < 99){
df <- read.csv(here::here("Data", "R Programming",directory, paste(0,id[i],".csv", sep = "")))
} else{
df <- read.csv(here::here("Data", "R Programming",directory, paste(id[i],".csv", sep = "")))
}
nobs <- sum(is.na(df[,2] & df[,3]) == F )
return(cbind(id[i],nobs))
})
df_complete <- as.data.frame(matrix(unlist(list), ncol = 2, byrow = T))
names(df_complete) = c("id", "nobs")
return(df_complete)
}
complete(directory = "specdata", id = 1:3)
complete(directory = "specdata", id = 5:12)
?lilst.files
?list.files
temp = list.files(path = here::here("Data", "R Programming", "specdata"), pattern="*.csv")
myfiles = lapply(temp, read.delim)
myfiles = lapply(temp, read.delim, here::here("Data", "R Programming", "specdata"))
myfiles = lapply(temp, read.csv, here::here("Data", "R Programming", "specdata"))
myfiles = lapply(temp, read.csv(path = here::here("Data", "R Programming", "specdata")))
myfiles = lapply(temp, read.csv, path = here::here("Data", "R Programming", "specdata"))
?read.csv
myfiles = lapply(here::here("Data", "R Programming", "specdata",temp), read.csv)
?corr
?cor
corr <- function(directory, threshold) {
list <- temp = list.files(path = here::here("Data", "R Programming", directory), pattern="*.csv")
myfiles = lapply(here::here("Data", "R Programming", "specdata",temp), read.csv)
corr <- lapply(seq_along(myfiles), function(i){
if(sum(is.na(myfiles[[i]][,2] & myfiles[[i]][,3]) == F ) >= threshold){
return(cor(myfiles[[i]][,2],myfiles[[i]][,3]))
}else{
return(NULL)
}
})
return(unlist(cor))
}
corr(directory = "specdata", threshold = 400)
corr <- function(directory, threshold) {
temp = list.files(path = here::here("Data", "R Programming", directory), pattern="*.csv")
myfiles = lapply(here::here("Data", "R Programming", "specdata",temp), read.csv)
corr <- lapply(seq_along(myfiles), function(i){
if(sum(is.na(myfiles[[i]][,2] & myfiles[[i]][,3]) == F ) >= threshold){
return(cor(myfiles[[i]][,2],myfiles[[i]][,3]))
}else{
return(NULL)
}
})
return(unlist(cor))
}
corr(directory = "specdata", threshold = 400)
corr <- function(directory, threshold) {
temp = list.files(path = here::here("Data", "R Programming", directory), pattern="*.csv")
myfiles = lapply(here::here("Data", "R Programming", "specdata",temp), read.csv)
corr <- lapply(seq_along(myfiles), function(i){
if(sum(is.na(myfiles[[i]][,2] & myfiles[[i]][,3]) == F ) >= threshold){
return(cor(myfiles[[i]][,2],myfiles[[i]][,3], use = "complete.obs"))
}else{
return(NULL)
}
})
return(unlist(cor))
}
corr(directory = "specdata", threshold = 400)
corr <- function(directory, threshold) {
temp = list.files(path = here::here("Data", "R Programming", directory), pattern="*.csv")
myfiles = lapply(here::here("Data", "R Programming", "specdata",temp), read.csv)
correlation_vec <- lapply(seq_along(myfiles), function(i){
if(sum(is.na(myfiles[[i]][,2] & myfiles[[i]][,3]) == F ) >= threshold){
cor(myfiles[[i]][,2],myfiles[[i]][,3], use = "complete.obs")
}else{
return(NULL)
}
})
return(unlist(correlation_vec))
}
corr(directory = "specdata", threshold = 400)
corr(directory = "specdata", threshold = 500)
corr(directory = "specdata", threshold = 1000)
corr(directory = "specdata", threshold = 400)
corr <- function(directory, threshold) {
temp = list.files(path = here::here("Data", "R Programming", directory), pattern="*.csv")
myfiles = lapply(here::here("Data", "R Programming", "specdata",temp), read.csv)
correlation_vec <- lapply(seq_along(myfiles), function(i){
if(sum(is.na(myfiles[[i]][,2] & myfiles[[i]][,3]) == F ) >= threshold){
cor(myfiles[[i]][,2],myfiles[[i]][,3])
}else{
return(NULL)
}
})
return(unlist(correlation_vec))
}
corr(directory = "specdata", threshold = 400)
corr <- function(directory, threshold) {
temp = list.files(path = here::here("Data", "R Programming", directory), pattern="*.csv")
myfiles = lapply(here::here("Data", "R Programming", "specdata",temp), read.csv)
correlation_vec <- lapply(seq_along(myfiles), function(i){
if(sum(is.na(myfiles[[i]][,2] & myfiles[[i]][,3]) == F ) >= threshold){
cor(myfiles[[i]][,2],myfiles[[i]][,3], use = "complete.obs")
}else{
return(NULL)
}
})
return(unlist(correlation_vec))
}
pollutantmean("specdata", "sulfate", 1:10)
polutantmean <- function(directory, pollutant, id) {
#iterate over the ids to read in the correct dataframes
means <- lapply(seq_along(id), function(i){
#some if statements to make sure that 0s are added where necessary to the id
if(id[i] < 10){
df <- read.csv(here::here("Data", "R Programming",directory, paste(0,0,id[i],".csv", sep = "")))
}else if(id[i] < 99){
df <- read.csv(here::here("Data", "R Programming",directory, paste(0,id[i],".csv", sep = "")))
} else{
df <- read.csv(here::here("Data", "R Programming",directory, paste(id[i],".csv", sep = "")))
}
#calculate the mean value of the polutants, ignoring NAs
return(mean(df[,c(pollutant)], na.rm = T))
})
#get a vector of means
mean(unlist(means))
}
polutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
polutantmean("specdata", "nitrate", 70:72)
polutantmean("specdata", "sulfate", 34)
polutantmean("specdata", "nitrate")
polutantmean("specdata", "nitrate", 1:332)
polutantmean("specdata", "nitrate", 1:330)
polutantmean <- function(directory, pollutant, id) {
#iterate over the ids to read in the correct dataframes
means <- lapply(seq_along(id), function(i){
#some if statements to make sure that 0s are added where necessary to the id
if(id[i] < 10){
df <- read.csv(here::here("Data", "R Programming",directory, paste(0,0,id[i],".csv", sep = "")))
}else if(id[i] < 100){
df <- read.csv(here::here("Data", "R Programming",directory, paste(0,id[i],".csv", sep = "")))
} else{
df <- read.csv(here::here("Data", "R Programming",directory, paste(id[i],".csv", sep = "")))
}
#calculate the mean value of the polutants, ignoring NAs
return(mean(df[,c(pollutant)], na.rm = T))
})
#get a vector of means
mean(unlist(means))
}
polutantmean("specdata", "nitrate", 1:330)
polutantmean("specdata", "nitrate", 1:332)
polutantmean("specdata", "nitrate", 1:320)
polutantmean("specdata", "nitrate", 319:320)
print(cc$nobs)
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
332:1
complete <- function(directory, id) {
#create a list of dataframes by iterating over the predefined ids
list <- lapply(seq_along(id), function(i){
# sum code to make sure the 0s are added to the file name where necessary
if(id[i] < 10){
df <- read.csv(here::here("Data", "R Programming",directory, paste(0,0,id[i],".csv", sep = "")))
}else if(id[i] < 100){
df <- read.csv(here::here("Data", "R Programming",directory, paste(0,id[i],".csv", sep = "")))
} else{
df <- read.csv(here::here("Data", "R Programming",directory, paste(id[i],".csv", sep = "")))
}
#count the number of observations for which there are no NAs in a row
nobs <- sum(is.na(df[,2] & df[,3]) == F )
return(cbind(id[i],nobs))
})
# create a data frame from the list objects above
df_complete <- as.data.frame(matrix(unlist(list), ncol = 2, byrow = T))
#rename the columns according to exercise
names(df_complete) = c("id", "nobs")
#return the data frame
return(df_complete)
}
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
RNGversion("3.5.1")
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
RNGversion("3.5.1")
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
corr <- function(directory, threshold = 0) {
#read in all the files in the directory that end with .csv
temp = list.files(path = here::here("Data", "R Programming", directory), pattern="*.csv")
myfiles = lapply(here::here("Data", "R Programming", "specdata",temp), read.csv)
#create a list of correlations by iterating over all files read in from the directory
correlation_vec <- lapply(seq_along(myfiles), function(i){
#check which monitors match the minimum threshold of complete observations
if(sum(is.na(myfiles[[i]][,2] & myfiles[[i]][,3]) == F ) >= threshold){
# calculate the correlations between the polutants, ignoring NAs
cor(myfiles[[i]][,2],myfiles[[i]][,3], use = "complete.obs")
#if no match, return nothing
}else{
return(NULL)
}
})
#unlist to get a vector of correlation
return(unlist(correlation_vec))
}
cr <- corr("specdata")
cr <- sort(cr)
RNGversion("3.5.1")
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata")
corr(directory = "specdata", threshold = 400)
corr(directory = "specdata", threshold = 1)
corr <- function(directory, threshold = 0) {
#read in all the files in the directory that end with .csv
temp = list.files(path = here::here("Data", "R Programming", directory), pattern="*.csv")
myfiles = lapply(here::here("Data", "R Programming", "specdata",temp), read.csv)
#create a list of correlations by iterating over all files read in from the directory
correlation_vec <- lapply(seq_along(myfiles), function(i){
#check which monitors match the minimum threshold of complete observations
if(sum(is.na(myfiles[[i]][,2] & myfiles[[i]][,3]) == F ) >= threshold){
# calculate the correlations between the polutants, ignoring NAs
cor(myfiles[[i]][,2],myfiles[[i]][,3], use = "everything")
#if no match, return nothing
}else{
return(NULL)
}
})
#unlist to get a vector of correlation
return(unlist(correlation_vec))
}
corr(directory = "specdata", threshold = 1)
corr <- function(directory, threshold = 0) {
#read in all the files in the directory that end with .csv
temp = list.files(path = here::here("Data", "R Programming", directory), pattern="*.csv")
myfiles = lapply(here::here("Data", "R Programming", "specdata",temp), read.csv)
#create a list of correlations by iterating over all files read in from the directory
correlation_vec <- lapply(seq_along(myfiles), function(i){
#check which monitors match the minimum threshold of complete observations
if(sum(is.na(myfiles[[i]][,2] & myfiles[[i]][,3]) == F ) >= threshold){
# calculate the correlations between the polutants, ignoring NAs
cor(myfiles[[i]][,2],myfiles[[i]][,3], use = "na.or.complete")
#if no match, return nothing
}else{
return(NULL)
}
})
#unlist to get a vector of correlation
return(unlist(correlation_vec))
}
corr(directory = "specdata", threshold = 1)
cr <- corr("specdata")
cr <- sort(cr)
RNGversion("3.5.1")
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
RNGversion("3.5.1")
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
polutantmean("specdata", "nitrate", 70:72)
polutantmean("specdata", "sulfate", 1:10)
polutantmean("specdata", "nitrate", 319:320)
polutantmean <- function(directory, pollutant, id) {
#iterate over the ids to read in the correct dataframes
list <- lapply(seq_along(id), function(i){
#some if statements to make sure that 0s are added where necessary to the id
if(id[i] < 10){
df <- read.csv(here::here("Data", "R Programming",directory, paste(0,0,id[i],".csv", sep = "")))
}else if(id[i] < 100){
df <- read.csv(here::here("Data", "R Programming",directory, paste(0,id[i],".csv", sep = "")))
} else{
df <- read.csv(here::here("Data", "R Programming",directory, paste(id[i],".csv", sep = "")))
}
#calculate the mean value of the polutants, ignoring NAs
return(df)
})
#get a vector of means
bound_df <- as.data.frame(matrix(unlist(list), ncol = 3, byrow = T))
return(bound_df)
}
polutantmean("specdata", "sulfate", 1:10)
glimpse(polutantmean("specdata", "nitrate", 70:72))
polutantmean <- function(directory, pollutant, id) {
#iterate over the ids to read in the correct dataframes
list <- lapply(seq_along(id), function(i){
#some if statements to make sure that 0s are added where necessary to the id
if(id[i] < 10){
df <- read.csv(here::here("Data", "R Programming",directory, paste(0,0,id[i],".csv", sep = "")))
}else if(id[i] < 100){
df <- read.csv(here::here("Data", "R Programming",directory, paste(0,id[i],".csv", sep = "")))
} else{
df <- read.csv(here::here("Data", "R Programming",directory, paste(id[i],".csv", sep = "")))
}
#calculate the mean value of the polutants, ignoring NAs
return(df)
})
#get a vector of means
bound_df <- as.data.frame(matrix(unlist(list), ncol = 3))
return(bound_df)
}
polutantmean("specdata", "nitrate", 70:72)
polutantmean <- function(directory, pollutant, id) {
#iterate over the ids to read in the correct dataframes
list <- lapply(seq_along(id), function(i){
#some if statements to make sure that 0s are added where necessary to the id
if(id[i] < 10){
df <- read.csv(here::here("Data", "R Programming",directory, paste(0,0,id[i],".csv", sep = "")))
}else if(id[i] < 100){
df <- read.csv(here::here("Data", "R Programming",directory, paste(0,id[i],".csv", sep = "")))
} else{
df <- read.csv(here::here("Data", "R Programming",directory, paste(id[i],".csv", sep = "")))
}
#calculate the mean value of the polutants, ignoring NAs
return(df)
})
#get a vector of means
bound_df <- as.data.frame(matrix(unlist(list), ncol = 4, byrow = T))
return(bound_df)
}
head(polutantmean("specdata", "nitrate", 70:72))
polutantmean <- function(directory, pollutant, id) {
#iterate over the ids to read in the correct dataframes
list <- lapply(seq_along(id), function(i){
#some if statements to make sure that 0s are added where necessary to the id
if(id[i] < 10){
df <- read.csv(here::here("Data", "R Programming",directory, paste(0,0,id[i],".csv", sep = "")))
}else if(id[i] < 100){
df <- read.csv(here::here("Data", "R Programming",directory, paste(0,id[i],".csv", sep = "")))
} else{
df <- read.csv(here::here("Data", "R Programming",directory, paste(id[i],".csv", sep = "")))
}
#calculate the mean value of the polutants, ignoring NAs
return(df)
})
#get a vector of means
bound_df <- as.data.frame(matrix(unlist(list), ncol = 4, byrow = F))
return(bound_df)
}
head(polutantmean("specdata", "nitrate", 70:72))
polutantmean <- function(directory, pollutant, id) {
#iterate over the ids to read in the correct dataframes
list <- lapply(seq_along(id), function(i){
#some if statements to make sure that 0s are added where necessary to the id
if(id[i] < 10){
df <- read.csv(here::here("Data", "R Programming",directory, paste(0,0,id[i],".csv", sep = "")))
}else if(id[i] < 100){
df <- read.csv(here::here("Data", "R Programming",directory, paste(0,id[i],".csv", sep = "")))
} else{
df <- read.csv(here::here("Data", "R Programming",directory, paste(id[i],".csv", sep = "")))
}
#calculate the mean value of the polutants, ignoring NAs
return(df)
})
#get a vector of means
#bound_df <- as.data.frame(matrix(unlist(list), ncol = 4, byrow = F))
return(list)
}
polutantmean("specdata", "sulfate", 34)
polutantmean <- function(directory, pollutant, id) {
#iterate over the ids to read in the correct dataframes
means <- lapply(seq_along(id), function(i){
#some if statements to make sure that 0s are added where necessary to the id
if(id[i] < 10){
df <- read.csv(here::here("Data", "R Programming",directory, paste(0,0,id[i],".csv", sep = "")))
}else if(id[i] < 100){
df <- read.csv(here::here("Data", "R Programming",directory, paste(0,id[i],".csv", sep = "")))
} else{
df <- read.csv(here::here("Data", "R Programming",directory, paste(id[i],".csv", sep = "")))
}
#calculate the mean value of the polutants, ignoring NAs
return(mean(df[,c(pollutant)], na.rm = T))
})
#get a vector of means
mean(unlist(means))
}
polutantmean("specdata", "nitrate", 319:320)
polutantmean("specdata", "nitrate", 1:320)
polutantmean("specdata", "nitrate", 1:100)
polutantmean("specdata", "nitrate", 1:200)
polutantmean("specdata", "nitrate", 1:250)
polutantmean("specdata", "nitrate", 1:290)
polutantmean("specdata", "nitrate", 1:280)
polutantmean("specdata", "nitrate", 1:270)
library(swirl)
ls()
#start swirl
swirl()
ls()
class(plants)
dim(plants=)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head()
head(plants)
head(plants, n = 10)
tail(plants, n = 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = T)
sample(1:6, 4, replace = T)
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:10, 20)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips <- sample(0:1, 100, replacement = T, prob = c(0.3, 0.7))
flips <- sample(0:1, 100, replace =  T, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace =  T, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = c(0.7, 0.3))
rbinom(1, size = 100, prob = 0.7)
flips2 <- sample(rbinom(1, size = 1, prob = 0.7), 100)
flips2 <- sample(rbinom(1, size = 1, prob = 0.7), 100, replace = T)
flips2 <- rbinom(1, size = 1, n = 100, prob = 0.7)
flips2 <- rbinom(size = 1, n = 100, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, 100, 25)
rpois(5, 10)
replicate(100, rpois(5,10))
my_pois <- replicate(100, rpois(5,10))
my_pois
cm <- colMeans(mypois)
cm <- colMeans(my_pois)
hist(cm)
=======
>>>>>>> 5e327edd9d381ef24a70e5aabb462adfcd76c1c4
