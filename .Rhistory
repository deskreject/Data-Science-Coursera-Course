View(num_hospitals)
num_hospitals <- test_df %>%
group_by(State) %>%
summarise(n = n())
View(num_hospitals)
num <- 50
ifelse(num > num_hospitals$State, NA, ranking$State)
num <- 150
ifelse(num > num_hospitals$State, NA, ranking$State)
ifelse(num > num_hospitals$State, NA, ranking$State)
ifelse(num > num_hospitals$n, NA, ranking$State)
ifelse(num > num_hospitals$n, NA, ranking$Hospital.Name)
num <- 1
ifelse(num > num_hospitals$n, NA, ranking$Hospital.Name)
View(ranking)
ifelse(num > num_hospitals$n, NA, ranking$Hospital.Name)
num <- 3
ifelse(num > num_hospitals$n, NA, ranking$Hospital.Name)
ifelse(num > num_hospitals$n, NA, ranking %>% filter(rank == num))
ifelse(num > num_hospitals$n, NA, ranking %>% filter(rank == num) %>% select(Hospital.Name))
ifelse(num > num_hospitals$n, NA, ranking %>% filter(rank == num) %>% select(Hospital.Name, State))
test_rank <- ifelse(num > num_hospitals$n, NA, ranking %>% filter(rank == num) %>% select(Hospital.Name, State))
View(test_rank)
test_rank <- ifelse(num > num_hospitals$n, NA, ranking[,which(rank == num)]))
test_rank <- ifelse(num > num_hospitals$n, NA, ranking[,which(rank == num)])
test_rank <- ifelse(num > num_hospitals$n, NA, ranking[which(rank == num),])
test_rank <- ifelse(num > num_hospitals$n, NA, ranking[which(rank == num)])
test_rank <- ifelse(num > num_hospitals$n, NA, ranking[,which(rank == num)])
ranking <- test_df %>%
group_by(State) %>%
arrange(Hospital.Name) %>%
arrange(heart.attack) %>%
mutate("rank" = rank(heart.attack, ties.method = "first")) %>%
filter(rank == 1)
View(ranking)
ranking <- test_df %>%
group_by(State) %>%
arrange(Hospital.Name) %>%
arrange(heart.attack) %>%
mutate("rank" = rank(heart.attack, ties.method = "first")) %>%
filter(rank == num)
View(ranking)
ranking <- test_df %>%
group_by(State) %>%
arrange(Hospital.Name) %>%
arrange(heart.attack) %>%
mutate("rank" = rank(heart.attack, ties.method = "first")) %>%
filter(rank == num) %>%
select(Hospital.Name, State)
View(ranking)
ranking <- test_df %>%
group_by(State) %>%
arrange(Hospital.Name) %>%
arrange(heart.attack) %>%
mutate("rank" = rank(heart.attack, ties.method = "first")) %>%
filter(rank == num) %>%
select(Hospital.Name, State) %>%
arrange(State)
View(ranking)
rankall <- function(outcome, num = "best") {
## Read outcome data
df <- read.csv(here::here("Data",
"course_2_week_4",
"outcome-of-care-measures.csv"))
#filter down to relevant columns
df_refined <- df[, c("Hospital.Name",
"State",
"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack",
"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure",
"Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia")]
#rename the column names
names(df_refined) <- c("Hospital.Name",
"State",
"heart.attack",
"heart.failure",
"pneumonia")
#reformat the column
df_refined[,c(3:5)] <- apply(df_refined[,c(3:5)],2,as.numeric)
## Check that state, outcome and num are valid
potential_outcomes <- c("heart attack", "heart failure", "pneumonia")
if(!state %in% df$State){
stop("state name not found")
}
if(!outcome %in% potential_outcomes){
stop("outcome name not found")
}
#transform the num to a number
if(num == "best"){
num <- 1
} else if(num == "worst"){
num <- max(num_hospitals$n)
}
if(num > num_hospitals$n){
stop("NA, try different num argument")
}
## For each state, find the hospital of the given rank
if(outcome == "heart attack"){
ranking <- df_refined %>%
group_by(State) %>%
arrange(Hospital.Name) %>%
arrange(heart.attack) %>%
mutate("rank" = rank(heart.attack, ties.method = "first")) %>%
filter(rank == num) %>%
select(Hospital.Name, State) %>%
arrange(State)
}else if(outcome == "heart failure") {
ranking <- df_refined %>%
group_by(State) %>%
arrange(Hospital.Name) %>%
arrange(heart.failure) %>%
mutate("rank" = rank(heart.failure, ties.method = "first")) %>%
filter(rank == num) %>%
select(Hospital.Name, State) %>%
arrange(State)
}else{
ranking <- df_refined %>%
group_by(State) %>%
arrange(Hospital.Name) %>%
arrange(pneumonia) %>%
mutate("rank" = rank(pneumonia, ties.method = "first")) %>%
filter(rank == num) %>%
select(Hospital.Name, State) %>%
arrange(State)
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
return(ranking)
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
df <- read.csv(here::here("Data",
"course_2_week_4",
"outcome-of-care-measures.csv"))
#filter down to relevant columns
df_refined <- df[, c("Hospital.Name",
"State",
"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack",
"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure",
"Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia")]
#rename the column names
names(df_refined) <- c("Hospital.Name",
"State",
"heart.attack",
"heart.failure",
"pneumonia")
#reformat the column
df_refined[,c(3:5)] <- apply(df_refined[,c(3:5)],2,as.numeric)
## Check that state, outcome and num are valid
potential_outcomes <- c("heart attack", "heart failure", "pneumonia")
if(!outcome %in% potential_outcomes){
stop("outcome name not found")
}
#transform the num to a number
if(num == "best"){
num <- 1
} else if(num == "worst"){
num <- max(num_hospitals$n)
}
if(num > num_hospitals$n){
stop("NA, try different num argument")
}
## For each state, find the hospital of the given rank
if(outcome == "heart attack"){
ranking <- df_refined %>%
group_by(State) %>%
arrange(Hospital.Name) %>%
arrange(heart.attack) %>%
mutate("rank" = rank(heart.attack, ties.method = "first")) %>%
filter(rank == num) %>%
select(Hospital.Name, State) %>%
arrange(State)
}else if(outcome == "heart failure") {
ranking <- df_refined %>%
group_by(State) %>%
arrange(Hospital.Name) %>%
arrange(heart.failure) %>%
mutate("rank" = rank(heart.failure, ties.method = "first")) %>%
filter(rank == num) %>%
select(Hospital.Name, State) %>%
arrange(State)
}else{
ranking <- df_refined %>%
group_by(State) %>%
arrange(Hospital.Name) %>%
arrange(pneumonia) %>%
mutate("rank" = rank(pneumonia, ties.method = "first")) %>%
filter(rank == num) %>%
select(Hospital.Name, State) %>%
arrange(State)
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
return(ranking)
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
df <- read.csv(here::here("Data",
"course_2_week_4",
"outcome-of-care-measures.csv"))
#filter down to relevant columns
df_refined <- df[, c("Hospital.Name",
"State",
"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack",
"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure",
"Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia")]
#rename the column names
names(df_refined) <- c("Hospital.Name",
"State",
"heart.attack",
"heart.failure",
"pneumonia")
#reformat the column
df_refined[,c(3:5)] <- apply(df_refined[,c(3:5)],2,as.numeric)
## Check that state, outcome and num are valid
potential_outcomes <- c("heart attack", "heart failure", "pneumonia")
if(!outcome %in% potential_outcomes){
stop("outcome name not found")
}
#transform the num to a number
if(num == "best"){
num <- 1
} else if(num == "worst"){
num <- max(num_hospitals$n)
}
## For each state, find the hospital of the given rank
if(outcome == "heart attack"){
ranking <- df_refined %>%
group_by(State) %>%
arrange(Hospital.Name) %>%
arrange(heart.attack) %>%
mutate("rank" = rank(heart.attack, ties.method = "first")) %>%
filter(rank == num) %>%
select(Hospital.Name, State) %>%
arrange(State)
}else if(outcome == "heart failure") {
ranking <- df_refined %>%
group_by(State) %>%
arrange(Hospital.Name) %>%
arrange(heart.failure) %>%
mutate("rank" = rank(heart.failure, ties.method = "first")) %>%
filter(rank == num) %>%
select(Hospital.Name, State) %>%
arrange(State)
}else{
ranking <- df_refined %>%
group_by(State) %>%
arrange(Hospital.Name) %>%
arrange(pneumonia) %>%
mutate("rank" = rank(pneumonia, ties.method = "first")) %>%
filter(rank == num) %>%
select(Hospital.Name, State) %>%
arrange(State)
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
return(ranking)
}
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
filter(rank == num) %>%
select(Hospital.Name, State) %>%
arrange(State)
filter(rank == num) %>%
select(Hospital.Name, State) %>%
arrange(State)
rankall <- function(outcome, num = "best") {
## Read outcome data
df <- read.csv(here::here("Data",
"course_2_week_4",
"outcome-of-care-measures.csv"))
#filter down to relevant columns
df_refined <- df[, c("Hospital.Name",
"State",
"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack",
"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure",
"Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia")]
#rename the column names
names(df_refined) <- c("Hospital.Name",
"State",
"heart.attack",
"heart.failure",
"pneumonia")
#reformat the column
df_refined[,c(3:5)] <- apply(df_refined[,c(3:5)],2,as.numeric)
## Check that state, outcome and num are valid
potential_outcomes <- c("heart attack", "heart failure", "pneumonia")
if(!outcome %in% potential_outcomes){
stop("outcome name not found")
}
#transform the num to a number
num_hospitals <- df_refined %>%
group_by(State) %>%
arrange(Hospital.Name) %>%
arrange(heart.attack) %>%
mutate("rank" = rank(heart.attack, ties.method = "first"))
if(num == "best"){
num <- 1
} else if(num == "worst"){
num <- max(num_hospitals$n)
}
## For each state, find the hospital of the given rank
if(outcome == "heart attack"){
ranking <- df_refined %>%
group_by(State) %>%
arrange(Hospital.Name) %>%
arrange(heart.attack) %>%
mutate("rank" = rank(heart.attack, ties.method = "first")) %>%
filter(rank == num) %>%
select(Hospital.Name, State) %>%
arrange(State)
}else if(outcome == "heart failure") {
ranking <- df_refined %>%
group_by(State) %>%
arrange(Hospital.Name) %>%
arrange(heart.failure) %>%
mutate("rank" = rank(heart.failure, ties.method = "first")) %>%
filter(rank == num) %>%
select(Hospital.Name, State) %>%
arrange(State)
}else{
ranking <- df_refined %>%
group_by(State) %>%
arrange(Hospital.Name) %>%
arrange(pneumonia) %>%
mutate("rank" = rank(pneumonia, ties.method = "first")) %>%
filter(rank == num) %>%
select(Hospital.Name, State) %>%
arrange(State)
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
return(ranking)
}
tail(rankall("pneumonia", "worst"), 3)
rankall <- function(outcome, num = "best") {
## Read outcome data
df <- read.csv(here::here("Data",
"course_2_week_4",
"outcome-of-care-measures.csv"))
#filter down to relevant columns
df_refined <- df[, c("Hospital.Name",
"State",
"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack",
"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure",
"Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia")]
#rename the column names
names(df_refined) <- c("Hospital.Name",
"State",
"heart.attack",
"heart.failure",
"pneumonia")
#reformat the column
df_refined[,c(3:5)] <- apply(df_refined[,c(3:5)],2,as.numeric)
## Check that state, outcome and num are valid
potential_outcomes <- c("heart attack", "heart failure", "pneumonia")
if(!outcome %in% potential_outcomes){
stop("outcome name not found")
}
#transform the num to a number
num_hospitals <- df_refined %>%
group_by(State) %>%
arrange(Hospital.Name) %>%
arrange(heart.attack) %>%
mutate("rank" = rank(heart.attack, ties.method = "first"))
if(num == "best"){
num <- 1
} else if(num == "worst"){
num <- max(num_hospitals$rank)
}
## For each state, find the hospital of the given rank
if(outcome == "heart attack"){
ranking <- df_refined %>%
group_by(State) %>%
arrange(Hospital.Name) %>%
arrange(heart.attack) %>%
mutate("rank" = rank(heart.attack, ties.method = "first")) %>%
filter(rank == num) %>%
select(Hospital.Name, State) %>%
arrange(State)
}else if(outcome == "heart failure") {
ranking <- df_refined %>%
group_by(State) %>%
arrange(Hospital.Name) %>%
arrange(heart.failure) %>%
mutate("rank" = rank(heart.failure, ties.method = "first")) %>%
filter(rank == num) %>%
select(Hospital.Name, State) %>%
arrange(State)
}else{
ranking <- df_refined %>%
group_by(State) %>%
arrange(Hospital.Name) %>%
arrange(pneumonia) %>%
mutate("rank" = rank(pneumonia, ties.method = "first")) %>%
filter(rank == num) %>%
select(Hospital.Name, State) %>%
arrange(State)
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
return(ranking)
}
tail(rankall("pneumonia", "worst"), 3)
filter(rank == num) %>%
select(Hospital.Name, State) %>%
arrange(State)
num_hospitals <- test_df %>%
group_by(State) %>%
summarise(n = n())
View(ranking)
rank <- "worst"
num_hospitals <- test_df %>%
group_by(State) %>%
summarise(n = n())
View(ranking)
rankall <- function(outcome, num = "best") {
## Read outcome data
df <- read.csv(here::here("Data",
"course_2_week_4",
"outcome-of-care-measures.csv"))
#filter down to relevant columns
df_refined <- df[, c("Hospital.Name",
"State",
"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack",
"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure",
"Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia")]
#rename the column names
names(df_refined) <- c("Hospital.Name",
"State",
"heart.attack",
"heart.failure",
"pneumonia")
#reformat the column
df_refined[,c(3:5)] <- apply(df_refined[,c(3:5)],2,as.numeric)
## Check that state, outcome and num are valid
potential_outcomes <- c("heart attack", "heart failure", "pneumonia")
if(!outcome %in% potential_outcomes){
stop("outcome name not found")
}
## For each state, find the hospital of the given rank
if(outcome == "heart attack"){
ranking <- df_refined %>%
group_by(State) %>%
arrange(Hospital.Name) %>%
arrange(heart.attack) %>%
mutate("rank" = rank(heart.attack, ties.method = "first")) %>%
filter(rank == num) %>%
select(Hospital.Name, State) %>%
arrange(State)
}else if(outcome == "heart failure") {
ranking <- df_refined %>%
group_by(State) %>%
arrange(Hospital.Name) %>%
arrange(heart.failure) %>%
mutate("rank" = rank(heart.failure, ties.method = "first")) %>%
filter(rank == num) %>%
select(Hospital.Name, State) %>%
arrange(State)
}else{
ranking <- df_refined %>%
group_by(State) %>%
arrange(Hospital.Name) %>%
arrange(pneumonia) %>%
mutate("rank" = rank(pneumonia, ties.method = "first")) %>%
if(num == "best"){
filter(rank == 1)
}else if(num == "worst"){
filter(rank == min())
}
filter(rank == num) %>%
select(Hospital.Name, State) %>%
arrange(State)
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
return(ranking)
}
tail(rankall("pneumonia", "worst"), 3)
num <- "worst"
filter(rank == num) %>%
select(Hospital.Name, State) %>%
arrange(State)
num <- "best"
filter(rank == num) %>%
select(Hospital.Name, State) %>%
arrange(State)
filter(rank == num) %>%
select(Hospital.Name, State) %>%
arrange(State)
%>%
select(Hospital.Name, State) %>%
arrange(State)
num_hospitals <- test_df %>%
group_by(State) %>%
summarise(n = n())
View(ranking)
View(ranking)
num <- "worst"
ranking <- test_df %>%
group_by(State) %>%
arrange(Hospital.Name) %>%
arrange(heart.attack) %>%
mutate("rank" = rank(heart.attack, ties.method = "first")) %>%
if(num == "best"){
filter(rank == 1)
}else if(num == "worst"){
filter(rank == min())
}else{
filter(rank == num)
}
